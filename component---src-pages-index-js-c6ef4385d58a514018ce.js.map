{"version":3,"sources":["webpack:///./src/components/home/HomeHeaderBox.js","webpack:///./src/components/home/HomeHeader.js","webpack:///./src/components/home/HomeAPIBox.js","webpack:///./src/components/home/HomeFAQLink.js","webpack:///./src/pages/index.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaGhost.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["HomeHeaderBox","to","title","color","icon","children","className","name","Spirit","h4","small","propTypes","PropTypes","string","isRequired","node","HomeHeader","theme","page","xl","isHome","elevation","radius","src","alt","HomeAPIBox","target","href","h5","HomeFAQLink","HomePage","data","location","imageUrl","getMetaImageUrls","type","description","image","headerDividerStyle","bodyClass","mainClass","header","h3","p","shape","site","siteMetadata","siteUrl","pathname","pageQuery","getAuthorProperties","primaryAuthor","fetchAuthorData","authorProfiles","push","website","twitter","_","trimStart","facebook","compact","sameAsArray","length","join","profile_image","defaultProps","bool","ImageMeta","content","property","ArticleMetaGhost","canonical","overwriteDefaultImage","ghostPost","author","primary_author","publicTags","map","tagsHelper","visibility","fn","tag","primaryTag","slug","seoImage","feature_image","meta_title","meta_description","excerpt","rel","og_title","og_description","published_at","updated_at","keyword","i","key","twitter_title","twitter_description","object","tags","arrayOf","ArticleMetaMD","post","markdownRemark","fm","frontmatter","publishedAtISODate","date","Date","toISOString","keywords","timeToRead","number","WebsiteMeta","oneOf","MetaData","url","resolve","SITEURL","process","imageUrls","faq","integrations","tutorials","default","section","proptypes"],"mappings":"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","file":"component---src-pages-index-js-c6ef4385d58a514018ce.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport { Icon } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst HomeHeaderBox = ({ to, title, color, icon, children }) => (\n    <Link to={to} className=\"col-12 col-4-ns pa5 pa8-ns pa10-l pt8-l flex flex-column-ns items-start tdn content-stretch home-main-box-shadow db br4 bg-white\">\n        <Icon name={icon} className={`w10 h-auto w12-ns stroke-w--1-5 mr3 mb2 stroke-${color}`} />\n        <div className=\"flex flex-column justify-between flex-auto\">\n            <div>\n                <h2 className={`${Spirit.h4} mt0 mt2-ns darkgrey flex-shrink-1`}>{title}</h2>\n                <p className={`${Spirit.small} midgrey`}>{children}</p>\n            </div>\n            <span className={`${color} dib mt2 link fw5 f7 f5-ns flex items-center`}>\n                Learn more\n                <Icon name=\"arrow-right\" className={`w3 h3 ml2 fill-${color}`} />\n            </span>\n        </div>\n    </Link>\n)\n\nHomeHeaderBox.propTypes = {\n    to: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default HomeHeaderBox\n","import React from 'react'\n\nimport { SearchModal } from '../common/search'\nimport { NavBar } from '../common'\nimport HomeHeaderBox from './HomeHeaderBox'\nimport { Icon, Box } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\n\n// Custom headings must be React components. You should include the <NavBar /> component\n// somewhere in it. You can optionally set the theme of the navbar to `dark` or `light`.\nconst HomeHeader = () => (\n    <div className=\"gh-bg-home bb b--whitegrey\">\n        <header className=\"top-0 left-0 right-0 z-9999\">\n            <NavBar theme=\"light\" />\n        </header>\n        <div className={`${Spirit.page.xl} pb5 pt10 pt15-ns pt20-l pb10-ns pb15-l flex flex-column items-center bt bn-ns b--white-10`}>\n            <h1 className=\"ma0 pa0 f2 f1-ns f-headline-l white header-heading-shadow\">Documentation</h1>\n            <SearchModal isHome />\n\n            <section className={`${Spirit.page.xl} col-12 mt8 bt bn-ns b--whitegrey pt5 pt0-ns home-main-box-margin-ns`}>\n                <div className=\"grid-integrations-index mt4 mt6-l f8\">\n                    {/* <Box to=\"/listpro\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/mstore-web.png\" alt=\"MStore Magento\" />\n                        Mstore Web\n                    </Box> */}\n                    <Box to=\"/fluxnews\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/fluxnews.png\" alt=\"FluxNews\" />\n                        FluxNews\n                    </Box>\n\n                    <Box to=\"/fluxstore\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/fluxstore.png\" alt=\"Fluxstore\" />\n                        Fluxstore\n                    </Box>\n\n                \n                    <Box to=\"/mstore\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/mstore.png\" alt=\"MStore\" />\n                        MStore Pro\n                    </Box>\n\n                    <Box to=\"/beonews\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/beonews.png\" alt=\"MStore Magento\" />\n                        Beonews Pro\n                    </Box>\n\n                    <Box to=\"/listapp\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/listapp.png\" alt=\"MStore Magento\" />\n                        ListApp\n                    </Box>\n\n                    <Box to=\"/mstore-magento\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/mstore-magento.png\" alt=\"MStore Magento\" />\n                        MStore Magento\n                    </Box>\n\n                    <Box to=\"/mstore-opencart\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/mstore-opencart.png\" alt=\"MStore Opencart\" />\n                        MStore Opencart\n                    </Box>\n\n                    {/* <Box to=\"/mstore-mv\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/mstore.png\" alt=\"MStore Magento\" />\n                        MStore Multi Vendor\n                    </Box> */}\n\n                    {/* <Box to=\"/evastore\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/evastore.png\" alt=\"MStore Magento\" />\n                        Evastore\n                    </Box> */}\n\n                    {/* <Box to=\"/cestore\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/cestore.png\" alt=\"MStore Magento\" />\n                        CeStore\n                    </Box> */}\n\n                    {/* <Box to=\"/buzzapp\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/buzzapp.png\" alt=\"MStore Magento\" />\n                        Buzzapp\n                    </Box> */}\n\n                    {/* <Box to=\"/cestore-web\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/cestore.png\" alt=\"MStore Magento\" />\n                        CeStore Web\n                    </Box> */}\n\n                    {/* <Box to=\"/listpro\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/listpro.png\" alt=\"MStore Magento\" />\n                        ListPro\n                    </Box>\n\n                    <Box to=\"/reactxs\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/reactxs.png\" alt=\"MStore Magento\" />\n                        ReactXS\n                    </Box>\n\n                    <Box to=\"/beonboard\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/beonboard.png\" alt=\"MStore Magento\" />\n                        BeOnboard\n                    </Box>\n\n                    <Box to=\"/reactpage\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/reactpage.png\" alt=\"MStore Magento\" />\n                        ReactPage\n                    </Box>\n\n                    <Box to=\"/beostore\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                        <img className=\"w10 mb1\" src=\"/images/logos/beoui.png\" alt=\"MStore Magento\" />\n                        BeoStore\n                    </Box>\n*/}\n\n                    <Box to=\"/products/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn\" elevation=\"2\" radius=\"4\">\n                        <Icon name=\"more\" className=\"w8 nudge-top--6\" />\n                        See More\n                    </Box> \n                </div>\n            </section>\n        </div>\n    </div>\n)\n\nexport default HomeHeader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport { Spirit } from '../../styles/spirit-styles'\nimport { Icon } from '../common'\n\nconst HomeAPIBox = ({ to, icon, title, children }) => (\n    <a target=\"_blank\" href={to} className=\"flex items-start pa4 pa7-ns tdn bb b--whitegrey justify-between mih-10 flex-auto api-box\">\n        <span className=\"dib mr3 mt3 miw10 tc\"><Icon name={icon} className=\"stroke-middarkgrey-l2\" /></span>\n        <div className=\"flex-auto\">\n            <h4 className={`${Spirit.h5} darkgrey mt2 mt0-l`}>{title}</h4>\n            <p className={`${Spirit.small} midgrey`}>{children}</p>\n        </div>\n    </a>\n)\n\nHomeAPIBox.propTypes = {\n    to: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default HomeAPIBox\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst HomeFAQLink = ({ to, title, children }) => (\n    <span className=\"midgrey home-faq-question link dib pt1 pb5\">\n        <h4 className={`${Spirit.h5} blue dib`}>{title} </h4>\n        <p className={`${Spirit.small} mt0`}>{children}</p>\n    </span>\n)\n\nHomeFAQLink.propTypes = {\n    to: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default HomeFAQLink\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport { Icon, Box } from '../components/common'\nimport { Layout } from '../components/common/layout'\nimport { HomeHeader, HomeAPIBox, HomeFAQLink } from '../components/home'\nimport { Spirit } from '../styles/spirit-styles'\nimport { MetaData, getMetaImageUrls } from '../components/common/meta'\n\nconst HomePage = ({ data, location }) => {\n    // Add meta title and description for this page here to overwrite the site meta data as set in the config\n    const title = `InspireUI Docs`\n    const description = `InspireUI Documentation - Get help to installing the products easier`\n    const imageUrl = getMetaImageUrls()\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title}\n                description={description}\n                image={imageUrl}\n            />\n            <Layout\n                headerDividerStyle=\"shadow\"\n                bodyClass=\"bg-white\"\n                mainClass=\"bg-whitegrey-l2 pb-vw6 pb-vw3-ns\"\n                header={<HomeHeader />}\n            >\n                <div className=\"pt-vw3\">\n                    <div className={`${Spirit.page.xl} grid-12 gutter-row-20 gutter-40-ns pt10`}>\n\n                        <section className=\"col-12 col-6-ns flex flex-column justify-between mt4 mt0-ns\">\n                            <Link to=\"/resources/\" className={`${Spirit.h3} link darkgrey hover-midgrey flex-grow-0`}>Resources</Link>\n\n                            <Box className=\"mt5 tdn flex-auto flex flex-column items-stretch\" elevation=\"1\">\n                                <HomeAPIBox\n                                    to=\"https://shrtm.nu/LwyY\"\n                                    title=\"Cebuilder Download\"\n                                    icon=\"sdks\"\n                                >\n                                    Assistant tools to help for installing\n                                </HomeAPIBox>\n                                <HomeAPIBox\n                                    to=\"https://itunes.apple.com/us/developer/inspireui-company-limited/id1192736196\"\n                                    title=\"Demo iOS App \"\n                                    icon=\"rest-api\"\n                                >\n                                    Link to our demo on AppStore\n                                </HomeAPIBox>\n                                <HomeAPIBox\n                                    to=\"https://play.google.com/store/apps/developer?id=InspireUI\"\n                                    title=\"Demo Android App\"\n                                    icon=\"rest-api\"\n                                >\n                                    Link to our demo on Google Play store\n                                </HomeAPIBox>\n                            </Box>\n                        </section>\n\n                        <section className=\"col-12 col-6-ns mt0-ns bt bn-ns b--whitegrey nl5 nr5 nl0-ns nr0-ns ml0-ns mr0-ns pl5 pr5 pl0-ns pr0-ns pt5 pt0-ns \">\n                            <Link to=\"/faq/\" className={`${Spirit.h3} link darkgrey hover-midgrey`}>FAQ</Link>\n                            <div className=\"mt3 mt7-ns\">\n                                <HomeFAQLink to=\"/faq/upgrade-to-ghost-2-0/\" title=\"Will i get the free upgrade on next comming version\">\n                                Yes you will get the free upgrade with more awesome features coming, please follow the change logs to see the detail update. You will get the notify email for new version update on stores.\n\n                                </HomeFAQLink>\n\n                                <HomeFAQLink to=\"/faq/using-custom-domains/\" title=\"Does it include full source code package?\">\n                                    Yes, you will get the full source code package and also the free Wordpress plugins\n                                </HomeFAQLink>\n\n                                <HomeFAQLink to=\"/faq/upgrading-from-deprecated-ghost-cli/\" title=\"Can I release the app to both iOS and Android?\">\n                                    Yes, you will get the free upgrade with more awesome features coming, please follow the change logs to see the detail update. You will get the notify email for new version update on stores.\n                                </HomeFAQLink>\n\n                                <Link to=\"/faq/\" className={`${Spirit.p} midgrey fw5 link hover-blue`}>More FAQ...</Link>\n                            </div>\n                        </section>\n                    </div>\n\n                    {/* <section className={`${Spirit.page.xl} col-12 mt8 mt-vw3-ns bt bn-ns b--whitegrey pt5 pt0-ns`}>\n                        <Link to=\"/integrations/\" className={`${Spirit.h3} link darkgrey hover-midgrey`}>Integrations</Link>\n                        <p className={`${Spirit.p} mt2 midgrey flex flex-column flex-row-ns justify-between items-center-ns`}>\n                            All your favourite apps and tools, integrated with Ghost.\n                            <Link to=\"/integrations/\" className=\"blue link din nb1 mt2 mt0-ns hover-underline-blue\">\n                                <span className=\"flex items-center fw5\">Browse all integrations <Icon name=\"arrow-right\" className=\"w3 h3 ml1 fill-blue\" /></span>\n                            </Link>\n                        </p>\n                        <div className=\"grid-integrations-index mt4 mt6-l f8\">\n                            <Box to=\"/integrations/zapier/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                                <img className=\"w10 mb1\" src=\"https://res.cloudinary.com/tryghost/image/fetch/w_120,h_100,c_fit/https://docs.ghost.io/content/images/2018/09/zapier.png\" alt=\"Zapier\" />\n                                Zapier\n                            </Box>\n                            <Box to=\"/integrations/disqus/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                                <img className=\"w10 mb1\" src=\"https://res.cloudinary.com/tryghost/image/fetch/w_120,h_100,c_fit/https://docs.ghost.io/content/images/2018/09/disqus.svg\" alt=\"Disqus\" />\n                                Disqus\n                            </Box>\n                            <Box to=\"/integrations/slack/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                                <img className=\"w10 mb1\" src=\"https://res.cloudinary.com/tryghost/image/fetch/w_120,h_100,c_fit/https://docs.ghost.io/content/images/2018/09/slack.png\" alt=\"Slack\" />\n                                Slack\n                            </Box>\n                            <Box to=\"/integrations/unsplash/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                                <img className=\"w10 mb1\" src=\"https://res.cloudinary.com/tryghost/image/fetch/w_120,h_100,c_fit/https://docs.ghost.io/content/images/2018/09/unsplash.svg\" alt=\"Unsplash\" />\n                                Unsplash\n                            </Box>\n                            <Box to=\"/integrations/google-analytics/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                                <img className=\"w10 mb1\" src=\"https://res.cloudinary.com/tryghost/image/fetch/w_120,h_100,c_fit/https://docs.ghost.io/content/images/2018/09/google-analytics-1.png\" alt=\"Google Analytics\" />\n                                Google Analytics\n                            </Box>\n                            <Box to=\"/integrations/mailchimp/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                                <img className=\"w10 mb1\" src=\"https://res.cloudinary.com/tryghost/image/fetch/w_120,h_100,c_fit/https://docs.ghost.io/content/images/2018/09/mailchimp.png\" alt=\"Mailchimp\" />\n                                Mailchimp\n                            </Box>\n                            <Box to=\"/integrations/google-amp/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                                <img className=\"w10 mb1\" src=\"https://res.cloudinary.com/tryghost/image/fetch/w_120,h_100,c_fit/https://docs.ghost.io/content/images/2018/09/amp.jpg\" alt=\"Google AMP\" />\n                                Google AMP\n                            </Box>\n                            <Box to=\"/integrations/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn\" elevation=\"2\" radius=\"4\">\n                                <Icon name=\"more\" className=\"w8 nudge-top--6\" />\n                                See More\n                            </Box>\n                        </div>\n                    </section> */}\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nHomePage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default HomePage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n    }\n`\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor, fetchAuthorData) => {\n    let authorProfiles = []\n\n    if (fetchAuthorData) {\n        authorProfiles.push(\n            primaryAuthor.website ? primaryAuthor.website : null,\n            primaryAuthor.twitter ? `https://twitter.com/${_.trimStart(primaryAuthor.twitter, `@`)}/` : null,\n            primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook}/` : null\n        )\n    } else {\n        authorProfiles.push(\n            `https://inspireui.com/`,\n            `https://twitter.com/inspireui/`,\n            `https://www.facebook.com/inspireui/`\n        )\n    }\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: fetchAuthorData ? primaryAuthor.name : `Ghost`,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: fetchAuthorData ? primaryAuthor.profile_image : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    fetchAuthorData: PropTypes.bool.isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { tags as tagsHelper } from '@tryghost/helpers'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\n\nconst ArticleMetaGhost = ({ data, canonical, fetchAuthorData, title, overwriteDefaultImage, image }) => {\n    const { ghostPost } = data\n    const { siteMetadata } = data.site\n\n    const author = getAuthorProperties(ghostPost.primary_author, fetchAuthorData)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || { name: `General`, slug: `general` }\n    const seoImage = (overwriteDefaultImage && ghostPost.feature_image) ? ghostPost.feature_image : image\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.meta_title || title || ghostPost.title}</title>\n                <meta name=\"description\" content={ghostPost.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\"\n                    content={\n                        ghostPost.og_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"og:description\"\n                    content={\n                        ghostPost.og_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                {/* <meta name=\"twitter.label1\" content=\"Reading time\" /> */}\n                {/* <meta name=\"twitter:data1\" content=\"TODO: Reading time helper and replace existing `label1` data\" /> */}\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                <meta name=\"twitter:label2\" content=\"Filed under\" />\n                <meta name=\"twitter:data2\" content={primaryTag} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.meta_title || title || ghostPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.published_at}\",\n                        \"dateModified\": \"${ghostPost.updated_at}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${ghostPost.meta_description || ghostPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\nArticleMetaGhost.defaultProps = {\n    fetchAuthorData: false,\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            published_at: PropTypes.string.isRequired,\n            updated_at: PropTypes.string.isRequired,\n            excerpt: PropTypes.string.isRequired,\n            meta_title: PropTypes.string,\n            meta_description: PropTypes.string,\n            primary_author: PropTypes.object.isRequired,\n            feature_image: PropTypes.string,\n            tags: PropTypes.arrayOf(\n                PropTypes.shape({\n                    name: PropTypes.string,\n                    slug: PropTypes.string,\n                    visibility: PropTypes.string,\n                })\n            ),\n            primaryTag: PropTypes.shape({\n                name: PropTypes.string,\n            }),\n            og_title: PropTypes.string,\n            og_description: PropTypes.string,\n            twitter_title: PropTypes.string,\n            twitter_description: PropTypes.string,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    fetchAuthorData: PropTypes.bool,\n    title: PropTypes.string,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default ArticleMetaGhost\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport ImageMeta from './ImageMeta'\nimport { getMetaImageUrls } from '.'\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Ghost\",\n                            \"sameAs\": [\n                                \"https://inspireui.com/\",\n                                \"https://www.facebook.com/inspireui/\",\n                                \"https://twitter.com/inspireui/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nimport ImageMeta from './ImageMeta'\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={image} />\n        </>\n)\n\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport url from 'url'\n\nimport ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD'\nimport WebsiteMeta from './WebsiteMeta'\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n    const { ghostPost, markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (ghostPost) {\n            return (\n                <ArticleMetaGhost\n                    data={data}\n                    canonical={canonical}\n                    fetchAuthorData={fetchAuthorData}\n                    title={title}\n                    image={image}\n                    overwriteDefaultImage={overwriteDefaultImage}\n                />\n            )\n        } else if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        ghostPost: PropTypes.object,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types'\nimport url from 'url'\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.inspireui.com`\n\nconst imageUrls = {\n    faq: url.resolve(SITEURL, `/images/meta/Ghost-FAQ.jpg`),\n    integrations: url.resolve(SITEURL, `/images/meta/Ghost-Integrations.jpg`),\n    tutorials: url.resolve(SITEURL, `/images/meta/Ghost-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/Ghost-Docs.jpg`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}