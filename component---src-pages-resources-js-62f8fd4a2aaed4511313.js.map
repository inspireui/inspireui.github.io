{"version":3,"sources":["webpack:///./src/components/api/APICard.js","webpack:///./src/pages/resources.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaGhost.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["APICard","_ref","to","href","icon","img","iconClass","children","react_default","a","createElement","common","className","elevation","name","src","propTypes","PropTypes","string","node","isRequired","APIPage","data","location","imageUrl","getMetaImageUrls","sectionStyles","Fragment","meta","type","title","description","image","layout","mainClass","bodyClass","Spirit","page","xl","sectionHeading","sectionSubHeading","l","id","h3","small","api_APICard","shape","site","siteMetadata","siteUrl","pathname","pageQuery","getAuthorProperties","primaryAuthor","fetchAuthorData","authorProfiles","push","website","twitter","_","trimStart","facebook","compact","sameAsArray","length","join","profile_image","defaultProps","bool","ImageMeta","Helmet_default","content","property","ArticleMetaGhost","canonical","overwriteDefaultImage","ghostPost","author","primary_author","publicTags","map","tagsHelper","visibility","fn","tag","primaryTag","slug","seoImage","feature_image","meta_title","meta_description","excerpt","rel","og_title","og_description","published_at","updated_at","keyword","i","key","twitter_title","twitter_description","meta_ImageMeta","object","tags","arrayOf","ArticleMetaMD","post","markdownRemark","fm","frontmatter","publishedAtISODate","date","Date","toISOString","keywords","timeToRead","number","WebsiteMeta","oneOf","MetaData","_ref2","url","resolve","meta_ArticleMetaGhost","meta_ArticleMetaMD","meta_WebsiteMeta","SITEURL","process","imageUrls","faq","integrations","tutorials","default","section","proptypes","__webpack_require__","d","__webpack_exports__","meta_MetaData","meta_getMetaImageUrls"],"mappings":"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","file":"component---src-pages-resources-js-62f8fd4a2aaed4511313.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Icon, Box } from '../common'\n\nconst APICard = ({ to, href, icon, img, iconClass, children }) => (\n    <Box\n        to={to || null}\n        href={href}\n        className=\"br4 flex flex-column justify-between items-center middarkgrey pa2 pt8 pb5 tdn\"\n        elevation={!href && !to ? `1` : `2`}\n    >\n        {icon ? <div className=\"w10 h10 flex justify-center items-center\"><Icon name={icon} className={`w10 h10 mb4 ${iconClass}`}></Icon></div> : null}\n        {img ? <div className=\"w10 h10 flex justify-center items-center\"><img src={img} className=\"nudge-bottom--4\" /></div> : null}\n        <span className={(!to && !href ? `o-50` : ``)}>{children}</span>\n    </Box>\n)\n\nAPICard.propTypes = {\n    to: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    img: PropTypes.string,\n    iconClass: PropTypes.string,\n    children: PropTypes.node.isRequired,\n}\n\nexport default APICard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { Spirit } from '../styles/spirit-styles'\nimport { Layout } from '../components/common/layout'\nimport { APICard } from '../components/api'\nimport { MetaData, getMetaImageUrls } from '../components/common/meta'\n\nconst APIPage = ({ data, location }) => {\n    // Add meta title and description or this page here to overwrite the site meta data as set in the config\n    const title = `Common Resources`\n    const description = `Collections of useful links and demo app via Appstore or Google Play store`\n    const imageUrl = getMetaImageUrls()\n\n    const sectionStyles = {\n        headingContainer: `col-12 col-4-ns mr10-ns`,\n        cardContainer: `col-12 col-8-ns mt-vw4 mt0-ns grid-icon-boxes`,\n    }\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title}\n                description={description}\n                image={imageUrl}\n            />\n            <Layout mainClass=\"bg-whitegrey-l2\" bodyClass=\"bg-white\">\n                <section className=\"bg-api-reference\">\n                    <div className={`${Spirit.page.xl} tc-ns pt-vw6 pt-vw5-ns pb-vw5 white`}>\n                        <h1 className={`${Spirit.sectionHeading} gh-integration-header-shadow`}>Common Resources</h1>\n                        <p className={Spirit.sectionSubHeading}>Collections of useful links and resource form InspireUI</p>\n                    </div>\n                </section>\n\n                <div className={`${Spirit.page.l} pb-vw4 pb-vw3-ns pt-vw4 pt-vw3-ns`}>\n                    <div className=\"grid-12\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"frontend-sdk\" className={`${Spirit.h3} pt20 nt20`}>Reference</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>Common useful links you may like to explore from our product</p>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard href=\"https://www.dropbox.com/sh/gq9la1uk5tztp1v/AAAjVByMxpLmvYd_XYDjNLApa?dl=0\" icon=\"ic-dropbox\">CeBuilder</APICard>\n                            <APICard href=\"https://www.youtube.com/inspireui?sub_confirmation=1\" icon=\"ic-youtube\">Youtube</APICard>\n                            <APICard href=\"https://www.youtube.com/inspireui?sub_confirmation=1\" icon=\"ic-git\">Ticket Support</APICard>\n                            {/* <APICard to=\"/api/gatsby/\" icon=\"gatsby-logo\">Gatsby</APICard> */}\n                        </div>\n                    </div>\n\n                    <div className=\"grid-12 mt-vw4 mt20-ns\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"rest-api\" className={`${Spirit.h3} pt20 nt20`}>Demo</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>Resource link for the demo app</p>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard href=\"https://itunes.apple.com/br/developer/inspireui-company-limited/id1192736196?l=en\" icon=\"ic-ios2\">AppStore</APICard>\n                            <APICard href=\"https://play.google.com/store/apps/developer?id=InspireUI\" icon=\"ic-android2\">Google Play</APICard>\n                            <APICard href=\"https://expo.io/@inspireui-demo\" icon=\"ic-expo\">Expo</APICard> \n                        </div>\n                    </div>\n\n                    <div className=\"grid-12 mt-vw4 mt20-ns\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"rest-api\" className={`${Spirit.h3} pt20 nt20`}>Products</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>Explore more detail info from the product</p>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard href=\"https://inspireui.com/about\" icon=\"ic-web\">inspireui.com</APICard>\n                            <APICard href=\"https://mstore.io\" icon=\"ic-web\">mstore.io</APICard> \n                        </div>\n                    </div>\n\n\n                    <div className=\"grid-12 mt-vw4 mt20-ns\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"tools\" className={`${Spirit.h3} pt20 nt20`}>Development Tools</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>Utilities to help build and develop React Aative app</p>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard href=\"https://github.com/infinitered/reactotron/releases\" icon=\"ghost-cli-logo\">Reactotron</APICard>\n                            <APICard href=\"https://github.com/jhen0409/react-native-debugger/releases\" icon=\"ghost-cli-logo\">RN Debugger</APICard>\n                            {/* <APICard href=\"https://gscan.ghost.org\" icon=\"gscan-logo\">GScan</APICard> */}\n                            {/* <APICard to=\"/api/javascript/sdk/\" icon=\"javascript-logo\">JavaScript SDK</APICard> */}\n                        </div>\n                    </div>\n\n                    {/* <div className=\"grid-12 mt-vw4 mt20-ns\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"client-libraries\" className={`${Spirit.h3} pt20 nt18`}>Client Libraries</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>Specific libraries for interacting with the Ghost API directly</p>\n                            <h4 className=\"f-supersmall dib ma0 pa0 bg-green pa1 br-pill pl3 pr3 tc white mt2 nudge-top--2\">Coming soon</h4>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard to=\"/api/javascript/\" icon=\"javascript-logo\">JavaScript</APICard>\n                            <APICard icon=\"ruby-logo\" iconClass=\"stroke-midlightgrey o-30\">Ruby</APICard>\n                            <APICard icon=\"php-logo\" iconClass=\"stroke-midlightgrey o-30\">PHP</APICard>\n                            <APICard icon=\"python-logo\" iconClass=\"stroke-midlightgrey o-30\">Python</APICard>\n                            <APICard icon=\"apple-logo\" iconClass=\"stroke-midlightgrey o-30\">iOS</APICard>\n                            <APICard icon=\"android-logo\" iconClass=\"stroke-midlightgrey o-30\">Android</APICard>\n                        </div>\n                    </div> */}\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nAPIPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default APIPage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n    }\n`\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor, fetchAuthorData) => {\n    let authorProfiles = []\n\n    if (fetchAuthorData) {\n        authorProfiles.push(\n            primaryAuthor.website ? primaryAuthor.website : null,\n            primaryAuthor.twitter ? `https://twitter.com/${_.trimStart(primaryAuthor.twitter, `@`)}/` : null,\n            primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook}/` : null\n        )\n    } else {\n        authorProfiles.push(\n            `https://ghost.org/`,\n            `https://twitter.com/ghost/`,\n            `https://www.facebook.com/ghost/`\n        )\n    }\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: fetchAuthorData ? primaryAuthor.name : `Ghost`,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: fetchAuthorData ? primaryAuthor.profile_image : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    fetchAuthorData: PropTypes.bool.isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { tags as tagsHelper } from '@tryghost/helpers'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\n\nconst ArticleMetaGhost = ({ data, canonical, fetchAuthorData, title, overwriteDefaultImage, image }) => {\n    const { ghostPost } = data\n    const { siteMetadata } = data.site\n\n    const author = getAuthorProperties(ghostPost.primary_author, fetchAuthorData)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || { name: `General`, slug: `general` }\n    const seoImage = (overwriteDefaultImage && ghostPost.feature_image) ? ghostPost.feature_image : image\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.meta_title || title || ghostPost.title}</title>\n                <meta name=\"description\" content={ghostPost.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\"\n                    content={\n                        ghostPost.og_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"og:description\"\n                    content={\n                        ghostPost.og_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                {/* <meta name=\"twitter.label1\" content=\"Reading time\" /> */}\n                {/* <meta name=\"twitter:data1\" content=\"TODO: Reading time helper and replace existing `label1` data\" /> */}\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                <meta name=\"twitter:label2\" content=\"Filed under\" />\n                <meta name=\"twitter:data2\" content={primaryTag} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.meta_title || title || ghostPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.published_at}\",\n                        \"dateModified\": \"${ghostPost.updated_at}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${ghostPost.meta_description || ghostPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.ghost.org/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nArticleMetaGhost.defaultProps = {\n    fetchAuthorData: false,\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            published_at: PropTypes.string.isRequired,\n            updated_at: PropTypes.string.isRequired,\n            excerpt: PropTypes.string.isRequired,\n            meta_title: PropTypes.string,\n            meta_description: PropTypes.string,\n            primary_author: PropTypes.object.isRequired,\n            feature_image: PropTypes.string,\n            tags: PropTypes.arrayOf(\n                PropTypes.shape({\n                    name: PropTypes.string,\n                    slug: PropTypes.string,\n                    visibility: PropTypes.string,\n                })\n            ),\n            primaryTag: PropTypes.shape({\n                name: PropTypes.string,\n            }),\n            og_title: PropTypes.string,\n            og_description: PropTypes.string,\n            twitter_title: PropTypes.string,\n            twitter_description: PropTypes.string,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    fetchAuthorData: PropTypes.bool,\n    title: PropTypes.string,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default ArticleMetaGhost\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport ImageMeta from './ImageMeta'\nimport { getMetaImageUrls } from '.'\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Ghost\",\n                            \"sameAs\": [\n                                \"https://ghost.org/\",\n                                \"https://www.facebook.com/ghost/\",\n                                \"https://twitter.com/tryghost/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//     \"name\": \"Ghost\",\n//     \"logo\": {\n//         \"@type\": \"ImageObject\",\n//         \"url\": \"https://blog.ghost.org/favicon.png\",\n//         \"width\": 60,\n//         \"height\": 60\n//     }\n// },\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nimport ImageMeta from './ImageMeta'\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={image} />\n        </>\n)\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.ghost.org/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport url from 'url'\n\nimport ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD'\nimport WebsiteMeta from './WebsiteMeta'\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n    const { ghostPost, markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (ghostPost) {\n            return (\n                <ArticleMetaGhost\n                    data={data}\n                    canonical={canonical}\n                    fetchAuthorData={fetchAuthorData}\n                    title={title}\n                    image={image}\n                    overwriteDefaultImage={overwriteDefaultImage}\n                />\n            )\n        } else if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        ghostPost: PropTypes.object,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types'\nimport url from 'url'\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.inspireui.com`\n\nconst imageUrls = {\n    faq: url.resolve(SITEURL, `/images/meta/Ghost-FAQ.jpg`),\n    integrations: url.resolve(SITEURL, `/images/meta/Ghost-Integrations.jpg`),\n    tutorials: url.resolve(SITEURL, `/images/meta/Ghost-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/Ghost-Docs.jpg`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}