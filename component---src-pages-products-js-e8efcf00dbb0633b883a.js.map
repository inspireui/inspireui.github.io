{"version":3,"sources":["webpack:///./src/components/setup/SetupBox.js","webpack:///./src/pages/products.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaGhost.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["SetupBox","_ref","to","href","image","headingClass","title","children","react_default","a","createElement","common","className","radius","src","alt","Spirit","h4","small","propTypes","PropTypes","node","isRequired","icon","string","iconClass","SetupPage","data","location","imageUrl","getMetaImageUrls","Fragment","meta","type","description","layout","mainClass","bodyClass","page","xl","sectionHeading","sectionSubHeading","setup_SetupBox","shape","site","siteMetadata","siteUrl","pathname","pageQuery","getAuthorProperties","primaryAuthor","fetchAuthorData","authorProfiles","push","website","twitter","_","trimStart","facebook","compact","name","sameAsArray","length","join","profile_image","defaultProps","bool","ImageMeta","Helmet_default","content","property","ArticleMetaGhost","canonical","overwriteDefaultImage","ghostPost","author","primary_author","publicTags","map","tagsHelper","visibility","fn","tag","primaryTag","slug","seoImage","feature_image","meta_title","meta_description","excerpt","rel","og_title","og_description","published_at","updated_at","keyword","i","key","twitter_title","twitter_description","meta_ImageMeta","object","tags","arrayOf","ArticleMetaMD","post","markdownRemark","fm","frontmatter","publishedAtISODate","date","Date","toISOString","keywords","timeToRead","number","WebsiteMeta","oneOf","MetaData","_ref2","url","resolve","meta_ArticleMetaGhost","meta_ArticleMetaMD","meta_WebsiteMeta","SITEURL","process","imageUrls","faq","integrations","tutorials","default","section","proptypes","__webpack_require__","d","__webpack_exports__","meta_MetaData","meta_getMetaImageUrls"],"mappings":"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","file":"component---src-pages-products-js-e8efcf00dbb0633b883a.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Box, Icon } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst SetupBox = ({ to, href, image, headingClass, title, children }) => (\n    <Box\n        to={to}\n        href={href}\n        className=\"col-12 col-6-ns col-4-l pa8 tdn middarkgrey setup-box-min-height\"\n        radius=\"4\"\n    >\n        <img className=\"w10 mb1\" src={`/images/logos/` + image} alt=\"MStore\" />\n        <h4 className={`${Spirit.h4} darkgrey ${headingClass}`}>{title}</h4>\n        <div className={`${Spirit.small} mt1 midgrey`}>{children}</div>\n    </Box>\n)\n\nSetupBox.propTypes = {\n    children: PropTypes.node.isRequired,\n    icon: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    to: PropTypes.string,\n    href: PropTypes.string,\n    iconClass: PropTypes.string,\n    headingClass: PropTypes.string,\n}\n\nexport default SetupBox\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { Spirit } from '../styles/spirit-styles'\nimport { Layout } from '../components/common/layout'\nimport { SetupBox } from '../components/setup'\nimport { MetaData, getMetaImageUrls } from '../components/common/meta'\n\nconst SetupPage = ({ data, location }) => {\n    // Add meta title and description for this page here to overwrite the site meta data as set in the config\n    const title = `How To Install Ghost: Setup & Configuration - Open Source Publishing`\n    const description = `All the tools you need to get started with Ghost 👉Self-hosted install & setup, local install guide for development, contribution guidelines & premium hosted services!`\n    const imageUrl = getMetaImageUrls()\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title || data.site.siteMetadata.title}\n                description={description || data.site.siteMetadata.description}\n                image={imageUrl}\n            />\n            <Layout mainClass=\"bg-whitegrey-l2 pb-vw3\" bodyClass=\"bg-white\">\n                <section className=\"bg-setup\">\n                    <div className={`${Spirit.page.xl} tc-ns pt-vw6 pt-vw5-ns pb-vw5 white`}>\n                        <h1 className={`${Spirit.sectionHeading} gh-integration-header-shadow`}>Products Guide</h1>\n                        <p className={Spirit.sectionSubHeading}>\n                            The easiest way to get started is to use <strong>InspireUI products</strong>. \n                        </p>\n                    </div>\n                </section>\n\n                <div className={`${Spirit.page.xl} mt-vw3`}>\n                    <section className=\"grid-12 gutter-row-20 gutter-20-ns gutter-36-l\">\n                    <SetupBox to=\"/fluxstore\" title=\"Fluxstore\" image=\"mstore.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                FluxStore - Universal mobile commerce <strong>Flutter</strong> app for Magento, WooCommerce and Opencart\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/mstore\" title=\"MStore Pro\" image=\"mstore.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                The Complete React Native template for <strong>mobile commerce</strong> app by React Native\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/beonews\" title=\"BeoNews Pro\" image=\"beonews.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                React Native mobile app for Wordpress for Multi-purpose\n                            </p>\n                        </SetupBox>\n\n                        <SetupBox to=\"/listapp\" title=\"ListApp\" image=\"listapp.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                            Listing Directory mobile app by React Native support MyLising, Listify & Listable\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/mstore-magento\" title=\"Mstore Magento\" image=\"mstore-magento.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                The complete react native app for Magento 2\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/mstore-opencart\" title=\"Mstore Opencart\" image=\"mstore-opencart.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                The complete react native app for Opencart\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/mstore-mv\" title=\"Mstore Multi Vendor\" image=\"mstore.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                Complete React Native template for WooCommerce, support with Dokan, WC Vendor & WCFM Marketplace\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/evastore\" title=\"EvaStore\" image=\"evastore.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                            Shopify mobile store by React Native and GraphQL\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/mstore-shopify\" title=\"Mstore Shopify\" image=\"mstore.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                Mstore Shopify mobile store by React Native and Rest API\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/cestore\" title=\"CeStore\" image=\"cestore.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                            ReactJS web app & React Native mobile app for e-commerce\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/buzzapp\" title=\"Buzzapp\" image=\"buzzapp.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                            Viral Magazine WordPress app by React Native (CeNews)\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/cestore-web\" title=\"CeStore Web\" image=\"cestore.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                            Ecommerce Progressive Web Apps Template by ReactJS & MongoDB\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/listpro\" title=\"ListPro\" image=\"listpro.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                Listing Directory React Native template\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/reactxs\" title=\"ReactXS\" image=\"reactxs.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                 UIKit for Material Design 2.0 by React Native\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/beonboard\" title=\"BeOnboard\" image=\"beonboard.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                The complete onboarding template for React Native app\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/reactpage\" title=\"ReactPage\" image=\"reactpage.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                The Bootstrap Starter Kit for ReactJS and Wordpress\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/beostore\" title=\"BeoStore\" image=\"beoui.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                The complete Mobile UI template for React Native\n                            </p>\n                        </SetupBox>\n                        \n                    </section>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nSetupPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default SetupPage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n    }\n`\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor, fetchAuthorData) => {\n    let authorProfiles = []\n\n    if (fetchAuthorData) {\n        authorProfiles.push(\n            primaryAuthor.website ? primaryAuthor.website : null,\n            primaryAuthor.twitter ? `https://twitter.com/${_.trimStart(primaryAuthor.twitter, `@`)}/` : null,\n            primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook}/` : null\n        )\n    } else {\n        authorProfiles.push(\n            `https://inspireui.com/`,\n            `https://twitter.com/inspireui/`,\n            `https://www.facebook.com/inspireui/`\n        )\n    }\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: fetchAuthorData ? primaryAuthor.name : `Ghost`,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: fetchAuthorData ? primaryAuthor.profile_image : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    fetchAuthorData: PropTypes.bool.isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { tags as tagsHelper } from '@tryghost/helpers'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\n\nconst ArticleMetaGhost = ({ data, canonical, fetchAuthorData, title, overwriteDefaultImage, image }) => {\n    const { ghostPost } = data\n    const { siteMetadata } = data.site\n\n    const author = getAuthorProperties(ghostPost.primary_author, fetchAuthorData)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || { name: `General`, slug: `general` }\n    const seoImage = (overwriteDefaultImage && ghostPost.feature_image) ? ghostPost.feature_image : image\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.meta_title || title || ghostPost.title}</title>\n                <meta name=\"description\" content={ghostPost.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\"\n                    content={\n                        ghostPost.og_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"og:description\"\n                    content={\n                        ghostPost.og_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                {/* <meta name=\"twitter.label1\" content=\"Reading time\" /> */}\n                {/* <meta name=\"twitter:data1\" content=\"TODO: Reading time helper and replace existing `label1` data\" /> */}\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                <meta name=\"twitter:label2\" content=\"Filed under\" />\n                <meta name=\"twitter:data2\" content={primaryTag} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.meta_title || title || ghostPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.published_at}\",\n                        \"dateModified\": \"${ghostPost.updated_at}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${ghostPost.meta_description || ghostPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\nArticleMetaGhost.defaultProps = {\n    fetchAuthorData: false,\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            published_at: PropTypes.string.isRequired,\n            updated_at: PropTypes.string.isRequired,\n            excerpt: PropTypes.string.isRequired,\n            meta_title: PropTypes.string,\n            meta_description: PropTypes.string,\n            primary_author: PropTypes.object.isRequired,\n            feature_image: PropTypes.string,\n            tags: PropTypes.arrayOf(\n                PropTypes.shape({\n                    name: PropTypes.string,\n                    slug: PropTypes.string,\n                    visibility: PropTypes.string,\n                })\n            ),\n            primaryTag: PropTypes.shape({\n                name: PropTypes.string,\n            }),\n            og_title: PropTypes.string,\n            og_description: PropTypes.string,\n            twitter_title: PropTypes.string,\n            twitter_description: PropTypes.string,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    fetchAuthorData: PropTypes.bool,\n    title: PropTypes.string,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default ArticleMetaGhost\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport ImageMeta from './ImageMeta'\nimport { getMetaImageUrls } from '.'\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Ghost\",\n                            \"sameAs\": [\n                                \"https://inspireui.com/\",\n                                \"https://www.facebook.com/inspireui/\",\n                                \"https://twitter.com/inspireui/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nimport ImageMeta from './ImageMeta'\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={image} />\n        </>\n)\n\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport url from 'url'\n\nimport ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD'\nimport WebsiteMeta from './WebsiteMeta'\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n    const { ghostPost, markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (ghostPost) {\n            return (\n                <ArticleMetaGhost\n                    data={data}\n                    canonical={canonical}\n                    fetchAuthorData={fetchAuthorData}\n                    title={title}\n                    image={image}\n                    overwriteDefaultImage={overwriteDefaultImage}\n                />\n            )\n        } else if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        ghostPost: PropTypes.object,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types'\nimport url from 'url'\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.inspireui.com`\n\nconst imageUrls = {\n    faq: url.resolve(SITEURL, `/images/meta/Ghost-FAQ.jpg`),\n    integrations: url.resolve(SITEURL, `/images/meta/Ghost-Integrations.jpg`),\n    tutorials: url.resolve(SITEURL, `/images/meta/Ghost-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/Ghost-Docs.jpg`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}