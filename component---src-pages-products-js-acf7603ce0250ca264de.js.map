{"version":3,"sources":["webpack:///./src/components/setup/SetupBox.js","webpack:///./src/pages/products.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaGhost.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["SetupBox","to","href","image","headingClass","title","children","className","radius","src","alt","Spirit","h4","small","propTypes","PropTypes","node","isRequired","icon","string","iconClass","SetupPage","data","location","imageUrl","getMetaImageUrls","type","description","mainClass","bodyClass","page","xl","sectionHeading","sectionSubHeading","shape","site","siteMetadata","siteUrl","pathname","pageQuery","getAuthorProperties","primaryAuthor","fetchAuthorData","authorProfiles","push","website","twitter","_","trimStart","facebook","compact","name","sameAsArray","length","join","profile_image","defaultProps","bool","ImageMeta","content","property","ArticleMetaGhost","canonical","overwriteDefaultImage","ghostPost","author","primary_author","publicTags","map","tagsHelper","visibility","fn","tag","primaryTag","slug","seoImage","feature_image","meta_title","meta_description","excerpt","rel","og_title","og_description","published_at","updated_at","keyword","i","key","twitter_title","twitter_description","object","tags","arrayOf","ArticleMetaMD","post","markdownRemark","fm","frontmatter","publishedAtISODate","date","Date","toISOString","keywords","timeToRead","number","WebsiteMeta","oneOf","MetaData","url","resolve","SITEURL","process","imageUrls","faq","integrations","tutorials","default","section","proptypes"],"mappings":"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","file":"component---src-pages-products-js-acf7603ce0250ca264de.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Box, Icon } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst SetupBox = ({ to, href, image, headingClass, title, children }) => (\n    <Box\n        to={to}\n        href={href}\n        className=\"col-12 col-6-ns col-4-l pa8 tdn middarkgrey setup-box-min-height\"\n        radius=\"4\"\n    >\n        <img className=\"w10 mb1\" src={`/images/logos/` + image} alt=\"MStore\" />\n        <h4 className={`${Spirit.h4} darkgrey ${headingClass}`}>{title}</h4>\n        <div className={`${Spirit.small} mt1 midgrey`}>{children}</div>\n    </Box>\n)\n\nSetupBox.propTypes = {\n    children: PropTypes.node.isRequired,\n    icon: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    to: PropTypes.string,\n    href: PropTypes.string,\n    iconClass: PropTypes.string,\n    headingClass: PropTypes.string,\n}\n\nexport default SetupBox\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { Spirit } from '../styles/spirit-styles'\nimport { Layout } from '../components/common/layout'\nimport { SetupBox } from '../components/setup'\nimport { MetaData, getMetaImageUrls } from '../components/common/meta'\n\nconst SetupPage = ({ data, location }) => {\n    // Add meta title and description for this page here to overwrite the site meta data as set in the config\n    const title = `How To Install Ghost: Setup & Configuration - Open Source Publishing`\n    const description = `All the tools you need to get started with Ghost 👉Self-hosted install & setup, local install guide for development, contribution guidelines & premium hosted services!`\n    const imageUrl = getMetaImageUrls()\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title || data.site.siteMetadata.title}\n                description={description || data.site.siteMetadata.description}\n                image={imageUrl}\n            />\n            <Layout mainClass=\"bg-whitegrey-l2 pb-vw3\" bodyClass=\"bg-white\">\n                <section className=\"bg-setup\">\n                    <div className={`${Spirit.page.xl} tc-ns pt-vw6 pt-vw5-ns pb-vw5 white`}>\n                        <h1 className={`${Spirit.sectionHeading} gh-integration-header-shadow`}>Products Guide</h1>\n                        <p className={Spirit.sectionSubHeading}>\n                            The easiest way to get started is to use <strong>InspireUI products</strong>. \n                        </p>\n                    </div>\n                </section>\n\n                <div className={`${Spirit.page.xl} mt-vw3`}>\n                    <section className=\"grid-12 gutter-row-20 gutter-20-ns gutter-36-l\">\n                    <SetupBox to=\"/fluxstore\" title=\"Fluxstore\" image=\"mstore.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                FluxStore - Universal mobile commerce <strong>Flutter</strong> app for Magento, WooCommerce and Opencart\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/mstore\" title=\"MStore Pro\" image=\"mstore.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                The Complete React Native template for <strong>mobile commerce</strong> app by React Native\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/beonews\" title=\"BeoNews Pro\" image=\"beonews.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                React Native mobile app for Wordpress for Multi-purpose\n                            </p>\n                        </SetupBox>\n\n                        <SetupBox to=\"/listapp\" title=\"ListApp\" image=\"listapp.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                            Listing Directory mobile app by React Native support MyLising, Listify & Listable\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/mstore-magento\" title=\"Mstore Magento\" image=\"mstore-magento.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                The complete react native app for Magento 2\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/mstore-opencart\" title=\"Mstore Opencart\" image=\"mstore-opencart.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                The complete react native app for Opencart\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/mstore-mv\" title=\"Mstore Multi Vendor\" image=\"mstore.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                Complete React Native template for WooCommerce, support with Dokan, WC Vendor & WCFM Marketplace\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/evastore\" title=\"EvaStore\" image=\"evastore.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                            Shopify mobile store by React Native and GraphQL\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/mstore-shopify\" title=\"Mstore Shopify\" image=\"mstore.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                Mstore Shopify mobile store by React Native and Rest API\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/cestore\" title=\"CeStore\" image=\"cestore.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                            ReactJS web app & React Native mobile app for e-commerce\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/buzzapp\" title=\"Buzzapp\" image=\"buzzapp.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                            Viral Magazine WordPress app by React Native (CeNews)\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/cestore-web\" title=\"CeStore Web\" image=\"cestore.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                            Ecommerce Progressive Web Apps Template by ReactJS & MongoDB\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/listpro\" title=\"ListPro\" image=\"listpro.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                Listing Directory React Native template\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/reactxs\" title=\"ReactXS\" image=\"reactxs.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                 UIKit for Material Design 2.0 by React Native\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/beonboard\" title=\"BeOnboard\" image=\"beonboard.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                The complete onboarding template for React Native app\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/reactpage\" title=\"ReactPage\" image=\"reactpage.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                The Bootstrap Starter Kit for ReactJS and Wordpress\n                            </p>\n                        </SetupBox>\n                        <SetupBox to=\"/beostore\" title=\"BeoStore\" image=\"beoui.png\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                The complete Mobile UI template for React Native\n                            </p>\n                        </SetupBox>\n                        \n                    </section>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nSetupPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default SetupPage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n    }\n`\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor, fetchAuthorData) => {\n    let authorProfiles = []\n\n    if (fetchAuthorData) {\n        authorProfiles.push(\n            primaryAuthor.website ? primaryAuthor.website : null,\n            primaryAuthor.twitter ? `https://twitter.com/${_.trimStart(primaryAuthor.twitter, `@`)}/` : null,\n            primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook}/` : null\n        )\n    } else {\n        authorProfiles.push(\n            `https://inspireui.com/`,\n            `https://twitter.com/inspireui/`,\n            `https://www.facebook.com/inspireui/`\n        )\n    }\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: fetchAuthorData ? primaryAuthor.name : `Ghost`,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: fetchAuthorData ? primaryAuthor.profile_image : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    fetchAuthorData: PropTypes.bool.isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { tags as tagsHelper } from '@tryghost/helpers'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\n\nconst ArticleMetaGhost = ({ data, canonical, fetchAuthorData, title, overwriteDefaultImage, image }) => {\n    const { ghostPost } = data\n    const { siteMetadata } = data.site\n\n    const author = getAuthorProperties(ghostPost.primary_author, fetchAuthorData)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || { name: `General`, slug: `general` }\n    const seoImage = (overwriteDefaultImage && ghostPost.feature_image) ? ghostPost.feature_image : image\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.meta_title || title || ghostPost.title}</title>\n                <meta name=\"description\" content={ghostPost.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\"\n                    content={\n                        ghostPost.og_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"og:description\"\n                    content={\n                        ghostPost.og_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                {/* <meta name=\"twitter.label1\" content=\"Reading time\" /> */}\n                {/* <meta name=\"twitter:data1\" content=\"TODO: Reading time helper and replace existing `label1` data\" /> */}\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                <meta name=\"twitter:label2\" content=\"Filed under\" />\n                <meta name=\"twitter:data2\" content={primaryTag} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.meta_title || title || ghostPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.published_at}\",\n                        \"dateModified\": \"${ghostPost.updated_at}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${ghostPost.meta_description || ghostPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\nArticleMetaGhost.defaultProps = {\n    fetchAuthorData: false,\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            published_at: PropTypes.string.isRequired,\n            updated_at: PropTypes.string.isRequired,\n            excerpt: PropTypes.string.isRequired,\n            meta_title: PropTypes.string,\n            meta_description: PropTypes.string,\n            primary_author: PropTypes.object.isRequired,\n            feature_image: PropTypes.string,\n            tags: PropTypes.arrayOf(\n                PropTypes.shape({\n                    name: PropTypes.string,\n                    slug: PropTypes.string,\n                    visibility: PropTypes.string,\n                })\n            ),\n            primaryTag: PropTypes.shape({\n                name: PropTypes.string,\n            }),\n            og_title: PropTypes.string,\n            og_description: PropTypes.string,\n            twitter_title: PropTypes.string,\n            twitter_description: PropTypes.string,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    fetchAuthorData: PropTypes.bool,\n    title: PropTypes.string,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default ArticleMetaGhost\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport ImageMeta from './ImageMeta'\nimport { getMetaImageUrls } from '.'\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Ghost\",\n                            \"sameAs\": [\n                                \"https://inspireui.com/\",\n                                \"https://www.facebook.com/inspireui/\",\n                                \"https://twitter.com/inspireui/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nimport ImageMeta from './ImageMeta'\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={image} />\n        </>\n)\n\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport url from 'url'\n\nimport ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD'\nimport WebsiteMeta from './WebsiteMeta'\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n    const { ghostPost, markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (ghostPost) {\n            return (\n                <ArticleMetaGhost\n                    data={data}\n                    canonical={canonical}\n                    fetchAuthorData={fetchAuthorData}\n                    title={title}\n                    image={image}\n                    overwriteDefaultImage={overwriteDefaultImage}\n                />\n            )\n        } else if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        ghostPost: PropTypes.object,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types'\nimport url from 'url'\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.inspireui.com`\n\nconst imageUrls = {\n    faq: url.resolve(SITEURL, `/images/meta/Ghost-FAQ.jpg`),\n    integrations: url.resolve(SITEURL, `/images/meta/Ghost-Integrations.jpg`),\n    tutorials: url.resolve(SITEURL, `/images/meta/Ghost-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/Ghost-Docs.jpg`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}